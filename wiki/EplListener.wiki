#summary Listener info for statement bean

= Introduction =

Listeners in a statement bean is used to play with data an EPL query capture.  This is where most of us will do customization to Rocksteady.  Each of us probably have different need for the data that was captured by EPL, for instance, for some data, it saves them to DB for later analysis, for some, it emails the data.

For example, following listener will send captured metric to configured graphite host.

{{{
    <property name="listeners">
     <list>
       <bean class="com.admob.rocksteady.reactor.Graphite">
           <property name="suffix" value="averaged"/>
       </bean>    
     </list>
    </property>
}}}

Sometimes, there will be statement bean without any listener, chances are, they are just collecting data to be used by other statements.

= Details =

As mention before, listener is where most people will do their customization.   "SELECT" in EPL or SQL declareã„‹ output fields.  Since POJO is what gets fed into Esper, POJO properties are fields available for EPL's "SELECT" as well as aggregation function such as "avg()" or "max()".  We need to make sure listeners are using available fields, otherwise it will cause run time error.

There are couple listener Rocksteady comes with, look for them in [http://rocksteady.googlecode.com/svn/trunk/src/main/java/com/admob/rocksteady/reactor/  this source location].


We'll cover two listener that's used regularly.
 # Alerting
 # Nagios

I am hoping by covering two of listener, user can see how easy it is to create your own listener.


==Alerting==

Alerting reactor is an all purpose reactor.  It is used to record data to db or simply write a log line.  Behavior is determined by value supplied to a property  named "type" in each instance of Alerting bean.  Let's use a statement bean as example:

{{{
  <bean class="com.admob.rocksteady.router.cep.StatementBean" id="requestTimeOut">
  <constructor-arg value="SELECT irstream *
                         FROM Metric(app='admixer')                         
                         WHERE ((name = 'adworker.timeout_rate' AND value > 5) OR
                         (name = 'services.profiling.timeouts' AND value > 5) OR
                         (name = 'adworker.targeting.timeouts.rate' AND value > 5) )                                     
                         "/>
    <property name="listeners">
     <list>
       <bean class="com.admob.rocksteady.reactor.Alerting">
           <property name="type" value="latency_single"/>
       </bean>
     </list>
    </property>
  </bean>
}}}

For each event that fits the query, POJO is sent to *Alerting* bean with property named "type" set to "latency_single".

In Alerting class, 