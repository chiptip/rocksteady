#summary Sending metrics

== Introduction ==

Sending metric needs to be easy.  That's the premise we set out when we were designing the solution.  After ops install the box, anyone should be able to start sending metric by looking an example.  We made the choice of creating a port listening daemon to accept metric so other app/script is MQ unaware.  This way, all they need is to connect to a port and send those [MetricFormat metrics].

== Details ==

We send our metrics in two ways:
 # Send via local daemon, MQ independent.
 # Send using RabbitMQ library to send directly to message exchange.

=== Send via local daemon ===

Create a daemon to listen for metric string and forward it to configured RabbitMQ server and exchange.  Admob has released an implementation written in Python.  You can check it out from launchpad

bzr = bazaar source control
{{{
bzr branch lp:~zirpu/graphite/admob.branch
cd admob.branch/graphite_local_proxy
make pkg
dpkg -i ../graphite-local-proxy_1.0.0-0_all.deb
}}}

Once package is installed, you'll need to edit /etc/default/graphite_local_proxy for rabbitmq server, vhost, exchange, and etc.  

Once you have daemon up and running(default port is 2003), you can send metric with simple netcat

In Shell
{{{
echo '1min.system.cpu.prct_idle 80 1283207115' | nc localhost 2003
}}}

In Python
{{{
#!/usr/bin/python           # This is server.py file

import socket               # Import socket module

s = socket.socket()         # Create a socket object
host = 'localhost' # Get local machine name
port = 2003                # Reserve a port for your service.

s.connect((host, port))
s.send('1min.system.cpu.prct_idle 80 1283207115')
s.close                     # Close the socket when done
}}}

In Java
{{{
// Create a socket without a timeout
try {
  InetAddress addr = InetAddress.getByName("localhost");
  int port = 2003;

  // This constructor will block until the connection succeeds
  Socket socket = new Socket(addr, port);
} catch (UnknownHostException e) {
} catch (IOException e) {
}

try {
    BufferedWriter wr = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));
    wr.write("1min.system.cpu.prct_idle 80 1283207115");
    wr.flush();
} catch (IOException e) {
}
}}}
=== Send using RabbitMQ client ===

Many language has a client library, check this [http://www.rabbitmq.com/how.html Rabbitmq page] for detail info. 